package leetcode_solution;

import java.util.HashMap;
import java.util.Map.Entry;

public class longestsubstring {
	public static void main(String [ ] args){
		lengthOfLongestSubstring("holyluya");
	}
	
	public static int lengthOfLongestSubstring(String s){
		int len=0;
		String str="";
		
		HashMap<Character, Integer> map=new HashMap<Character, Integer>();
		
		for(int i=0;i<s.length();i++){
			//System.out.println(s.charAt(i));
			if(map.containsKey(s.charAt(i))){
				
			}else{
				map.put(s.charAt(i), i);
			}
		}
		
		int[] longLen=new int[map.size()];int num=0;
		for(Entry<Character, Integer> entry : map.entrySet()){
			Character key=entry.getKey();
			String k=""+key;
			String[] longStr=s.split(k);
			int max=0;
			for(int i=0;i<longStr.length;i++){
				if(longStr[i].length()>max){
					max=longStr[i].length();
				}
			}
			longLen[num]=max;
		}
		int max2=0;
		for(int i=0;i<longLen.length;i++){
			if(longLen[i]>max2){
				max2=longLen[i];
			}
		}
		return len;
	}
}
